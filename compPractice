/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       VEX                                                       */
/*    Created:      Thu Sep 26 2019                                           */
/*    Description:  Competition Template                                      */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// Controller1          controller                    
// Bob                  motor         1               
// Stuart               motor         3               
// Otto                 motor         5               
// Kevin                motor         7               
// Karen                motor         9               
// ---- END VEXCODE CONFIGURED DEVICES ----

#include "vex.h"

using namespace vex;

competition Competition;

void LeftMove(int speed) {
  Stuart.setVelocity(speed, percent);
  Stuart.spin(forward);
}

void RightMove(int speed) {
  Bob.setVelocity(speed, percent);
  Bob.spin(forward);
}

void ForkMove(int speed) {
  Otto.setVelocity(speed, percent);
  Otto.spin(forward);
}

void LiftControl(int speed) {
  Kevin.setVelocity(speed, percent);
  Kevin.spin(forward);
}

void bottomLift(int speed) {
  Karen.setVelocity(speed, percent);
  Karen.spin(forward);
}

void pre_auton(void) {
  // Initializing Robot Configuration. DO NOT REMOVE!
  vexcodeInit();
}

void leftControl(int speed, double time){
  Stuart.setVelocity(speed, percent);
  
  Stuart.spin(forward);
  
  wait(time * 100, msec);
  
  Stuart.setVelocity(speed, percent);
  
  Stuart.spin(forward);
}

void bottomControl(int speed, double time){
  Karen.setVelocity(speed, percent);
  
  Karen.spin(forward);
  
  wait(time * 100, msec);
  
  Karen.setVelocity(speed, percent);
  
  Karen.spin(forward);
}

void rightControl(int speed, double time){
  Bob.setVelocity(speed, percent);
  
  Bob.spin(forward);
  
  wait(time * 100, msec);
  
  Bob.setVelocity(speed, percent);
  
  Bob.spin(forward);
}

void autonomous(void) {
  
}

void usercontrol(void) {
  while (1) {
    if (!Controller1.ButtonDown.pressing() && Controller1.ButtonUp.pressing()) {
      ForkMove(50);
    } else if (Controller1.ButtonDown.pressing() && !Controller1.ButtonUp.pressing()) {
      ForkMove(-50);
    } else {
      ForkMove(0);
    }
  
    RightMove(Controller1.Axis2.position());
    LeftMove(Controller1.Axis3.position());
    wait(20, msec);
  }
}

int main() {
  Competition.autonomous(autonomous);
  Competition.drivercontrol(usercontrol);

  pre_auton();

  while (true) {
    wait(100, msec);
  }
}
